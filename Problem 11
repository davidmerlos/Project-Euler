#The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#Let us list the factors of the first seven triangle numbers:
#We can see that 28 is the first triangle number to have over five divisors.
#What is the value of the first triangle number to have over five hundred divisors?


#Nota: Funciona con valores para Target relativamente bajos. Para el problema en cuestion (Target = 500)  no funciona porque el numero de iteraciones es muy alto.

def triangle(Target):


    Serie_orden = [1]
    n = 1  
    Suma = 0
    Encontrado = False
    Lista_divisores = []

    while Encontrado == False:

        Lista_divisores = []

        for element in range(1,round(Suma**2)+1):
            if Suma % element == 0:
                Lista_divisores.append(element)

            if len(Lista_divisores) == Target:
                Encontrado = True
                print("n es", n)
                print("suma es",Suma)
                #print("Serie_orden es", Serie_orden)
                print("Lista Divisores es",Lista_divisores)
                break
 
        n += 1
        Suma += n
        #Serie_orden.append(Serie_orden[len(Serie_orden)-1]+1)


triangle(5)
